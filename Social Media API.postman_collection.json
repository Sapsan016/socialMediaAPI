{
	"info": {
		"_postman_id": "ca53e815-33c0-4b60-8220-730a5cbab3f5",
		"name": "Social Media API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24061076"
	},
	"item": [
		{
			"name": "Add New User failed not unique",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0ZXIiLCJyb2xlcyI6WyJST0xFX1VTRVIiLCJST0xFX0FETUlOIl0sImlhdCI6MTY4NTg3NjcyNSwiZXhwIjoxNjg1ODgwMzI1fQ.oFtV6rDeJEU09UxW55RQeIIcCQPedyniiBNcyDj3wH0",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"Test user 2\",\r\n  \"password\":\"test2\",\r\n  \"email\": \"usertest2@mail.ru\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/user/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"user",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test create user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"    pm.expect(jsonData.username).to.eql('Newtestuser');\r",
							"    pm.expect(jsonData.email).to.eql('1234test@ya.ru');\r",
							"    pm.expect(jsonData.status).to.eql('ACTIVE');\r",
							"});\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0ZXIiLCJyb2xlcyI6WyJST0xFX1VTRVIiLCJST0xFX0FETUlOIl0sImlhdCI6MTY4NTg3NjcyNSwiZXhwIjoxNjg1ODgwMzI1fQ.oFtV6rDeJEU09UxW55RQeIIcCQPedyniiBNcyDj3wH0",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"Newtestuser\",\r\n  \"password\":\"newtest\",\r\n  \"email\": \"1234test@ya.ru\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/user/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"user",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "9bc620de-c78a-4b1e-9930-4825926c0ebb",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"tester\",\r\n  \"password\": \"test\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test create user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.username).to.eql('tester');\r",
							"    pm.expect(jsonData.email).to.eql('testuser@ya.ru');\r",
							"    pm.expect(jsonData.status).to.eql('ACTIVE');    \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/admin/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"admin",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add New Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test add post\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.header).to.eql('Test post 1');\r",
							"    pm.expect(jsonData.text).to.eql('New post for a testing');\r",
							"    pm.expect(jsonData.imageRef).to.eql('c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"header\": \"Test post 1\",\r\n  \"text\": \"New post for a testing\",\r\n  \"imageRef\": \"c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get post by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test add post\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.header).to.eql('Test post 1');\r",
							"    pm.expect(jsonData.text).to.eql('New post for a testing');\r",
							"    pm.expect(jsonData.imageRef).to.eql('c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"tester\",\r\n  \"pasword\": \"test\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/post/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"post",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user's posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test get all users posts\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(1);\r",
							"\r",
							"    pm.expect(jsonData[0].id).to.eql(1);\r",
							"    pm.expect(jsonData[0].header).to.eql('Test post 1');\r",
							"    pm.expect(jsonData[0].text).to.eql('New post for a testing');\r",
							"    pm.expect(jsonData[0].imageRef).to.eql('c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"tester\",\r\n  \"pasword\": \"test\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/posts/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"posts",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user's posts empty list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test get empty list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(0);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"tester\",\r\n  \"pasword\": \"test\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/posts/2?from=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"posts",
						"2"
					],
					"query": [
						{
							"key": "from",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update post id=1 failed wrong userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"header\": \"Update post 1\",\r\n  \"text\": \"Updated test post1\",\r\n  \"imageRef\": \"c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/post/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"post",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update post id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test add post\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.header).to.eql('Update post 1');\r",
							"    pm.expect(jsonData.text).to.eql('Updated test post1');\r",
							"    pm.expect(jsonData.imageRef).to.eql('c:/Users/vl22m/OneDrive/Изображения/SavedPictures/IMG_20210811_211607');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"header\": \"Update post 1\",\r\n  \"text\": \"Updated test post1\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/2/post/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"2",
						"post",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Friend failed User not found",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Friend",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Friend failed Users are friends already",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirm Friend",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/respond/2/YES",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"respond",
						"2",
						"YES"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user's feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"tester\",\r\n  \"pasword\": \"test\"\r\n}\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/feed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"feed"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post id=1 failed wrong username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/post/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"post",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/users/2/post/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"2",
						"post",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Friend failed add yourself",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cancel Friendship",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v2/users/1/friend/cancel/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"users",
						"1",
						"friend",
						"cancel",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const loginRequest = {\r",
							"    url: 'http://localhost:8080/api/v2/auth/login',\r",
							"    method: 'POST',\r",
							"    header: 'Content-Type: application/json',\r",
							"    body: {\r",
							"        mode: 'application/json',\r",
							"        raw: JSON.stringify({        \r",
							"            \"username\": \"tester\",\r",
							"            \"password\": \"test\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(loginRequest, function (err, response) {\r",
							"    pm.environment.set(\"ACCESS_TOKEN\", response.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/admin/users/delete/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"admin",
						"users",
						"delete",
						"4"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}